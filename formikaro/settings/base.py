"""
Django settings for Formikaro project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import sys
from pathlib import Path

from celery.schedules import crontab
from decouple import config
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '10.0.0.105']

# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

]
THIRD_PARTY_APPS = [
    'celery', 'corsheaders', 'nested_inline', 'jsoneditor', 'django_celery_results', 'django_celery_beat',
    # 'wkhtmltopdf',
    'notifications',
    'rest_framework',
    'thumbnails',
]

PROJECT_APPS = [
    'apps.ProductManager',
    'apps.FileCollector',
    'apps.FormikoBot',
    'apps.FileDelivery',
    'apps.FormikoAudit',
]
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PROJECT_APPS

# ####################### CORS CONFIGURATION #################################

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
)

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'formikaro.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'apps.FormikoBot.context_processors.get_top_five_tasks',
                'apps.FormikoBot.context_processors.get_open_tasks',
            ],
        },
    },
]

WSGI_APPLICATION = 'formikaro.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
# }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Vienna'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# CELERY STUFF
BROKER_URL = 'redis://localhost:6379'
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_BEAT_SCHEDULE = {
    'get_shop_orders_from_API': {
        'task': 'apps.FileCollector.tasks.get_shop_orders',
        # 'schedule': crontab(minute='*/5'),
        'schedule': timedelta(seconds=60),
    },
}
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
            'stream': sys.stdout,
        },
        'logfile': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'local.log'),
            'maxBytes': 30 * 1024 * 1024,
            'backupCount': 1,
            'formatter': 'verbose',
        }
    },
    'loggers': {
        # This is the "catch all" logger
        '': {
            'handlers': ['console', 'logfile'],
            'level': 'WARNING',  # instead of 'DEBUG'
            'propagate': True,
        },
    }
}

# DEBUG!
DEBUG_TOOLBAR_CONFIG = {
    'EXTRA_SIGNALS': [
        'FileCollector.signals.check_company_folder',

    ],
}

VIMEO_USER_ID = config('VIMEO_USER_ID')
VIMEO_TOKEN = config('VIMEO_TOKEN')
VIMEO_KEY = config('VIMEO_KEY')
VIMEO_SECRET = config('VIMEO_SECRET')
VIMEO_URL = 'https://api.vimeo.com'

#PROJECT_UPLOAD_FOLDER = '/home/worker/Formikaro/mount/upload'
PROJECT_UPLOAD_FOLDER = config('PROJECT_UPLOAD_FOLDER') #from config file
PROJECT_PROCESSED_FOLDER = 'PROCESSED'
PROJECT_ERROR_FOLDER = 'ERROR'

IMAP_PROCESSED_FOLDER='processed'
IMAP_INVALID_FOLDER='invalid'
IMAP_FORWARDED_FOLDER='forwarded'

#INTAKE_PATH='/home/worker/Formikaro/mount/intake'
INTAKE_FOLDER = config('INTAKE_FOLDER') #from config file
INTRANET_INTAKE_DRIVE = config('INTRANET_INTAKE_DRIVE')
INTAKE_FOLDER_UNASSIGNED='UNASSIGNED'
INTAKE_FOLDER_ORDER='ORDER_'
INTAKE_TIMEOUT=18000

#SHOP_FOLDER='/home/worker/Formikaro/mount/shop'
SHOP_FOLDER = config('SHOP_FOLDER') #from config file
SHOP_CLIENT_CI_FOLDER='CLIENT_CI'
SHOP_SHELF_FOLDER='PRODUCTS'
SHOP_ORDER_FOLDER='ORDERS'
SHOP_DELIVERED_FOLDER='DELIVERED'
SHOP_DEFAULT_ASSETS_FOLDER='ASSETS'
SHOP_DEFAULT_ASSETS_GLOBAL_FOLDER='GLOBAL'
SHOP_DEFAULT_FOOTAGE_FOLDER='FOOTAGE'

SHOP_ORDER_RENDER_FOLDER='RENDER'
SHOP_ORDER_RENDER_OUTPUT_FOLDER='OUTPUT'
SHOP_DEFAULT_PREVIEW_FOLDER='PREVIEW'

BOT_LASTNAME='B0t'
BOT_ASSEMBLER_USERNAME='assembler'
BOT_DOORMAN_USERNAME='doorman'
BOT_PALOMA_USERNAME='paloma'

COPY_DELAY=5
#INTRANET_SHOP_DRIVE='S:/'
INTRANET_SHOP_DRIVE = config('INTRANET_SHOP_DRIVE') #from config file

SHOP_PENDING_ORDERS_API = config('SHOP_PENDING_ORDERS_API')
SHOP_ORDERS_AUTH_API = config('SHOP_ORDERS_AUTH_API')
ORDERS_API_USER = config('ORDERS_API_USER')
ORDERS_API_PASSWORD = config('ORDERS_API_PASSWORD')
PROJECT_FOLDER = config('PROJECT_FOLDER')
NEXRENDER_SERVER_IP = config('NEXRENDER_SERVER_IP', default='127.0.0.1:3050')
NEXRENDER_SECRET = config('NEXRENDER_SECRET', default=None)
RUNTIME_SAVE_INTERVAL = config('RUNTIME_SAVE_INTERVAL', default=60)

AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_REGION_NAME = config('AWS_S3_REGION_NAME')
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_VERIFY = True

THUMBNAILS = {
    'METADATA': {
        'BACKEND': 'thumbnails.backends.metadata.DatabaseBackend',
    },
    'STORAGE': {
        'BACKEND': 'formikaro.settings.storage_backends.FormikaroS3Storage',
    },
    'SIZES': {
        'small': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 10, 'height': 10},
                {'PATH': 'thumbnails.processors.crop', 'width': 80, 'height': 80}
            ],
            # 'POST_PROCESSORS': [
            #     {
            #         'PATH': 'thumbnails.post_processors.optimize',
            #         'png_command': 'optipng -force -o7 "%(filename)s"',
            #         'jpg_command': 'jpegoptim -f --strip-all "%(filename)s"',
            #     },
            # ],
        },
        'medium': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 20, 'height': 20},
                {'PATH': 'thumbnails.processors.flip', 'direction': 'horizontal'}
            ],
        },
        'large': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 40, 'height': 40},
                {'PATH': 'thumbnails.processors.flip', 'direction': 'horizontal'}
            ],
        },
        'watermarked': {
            'PROCESSORS': [
                {'PATH': 'thumbnails.processors.resize', 'width': 20, 'height': 20},
                # Only supports PNG. File must be of the same size with thumbnail (20 x 20 in this case)
                {'PATH': 'thumbnails.processors.add_watermark', 'watermark_path': 'watermark.png'}
            ],
        },
    }
}
